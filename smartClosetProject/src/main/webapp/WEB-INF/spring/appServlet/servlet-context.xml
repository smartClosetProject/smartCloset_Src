<?xml version="1.0" encoding="UTF-8"?>
<beans:beans xmlns="http://www.springframework.org/schema/mvc"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:beans="http://www.springframework.org/schema/beans"
	xmlns:context="http://www.springframework.org/schema/context"
	xmlns:aop="http://www.springframework.org/schema/aop"
	xmlns:mvc="http://www.springframework.org/schema/mvc"
	xsi:schemaLocation="http://www.springframework.org/schema/mvc https://www.springframework.org/schema/mvc/spring-mvc.xsd
		http://www.springframework.org/schema/beans https://www.springframework.org/schema/beans/spring-beans.xsd
		http://www.springframework.org/schema/context https://www.springframework.org/schema/context/spring-context.xsd
		http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop.xsd">

	<!-- DispatcherServlet Context: defines this servlet's request-processing infrastructure -->
	
	<!-- Enables the Spring MVC @Controller programming model -->
	<annotation-driven />

	<!-- Handles HTTP GET requests for /resources/** by efficiently serving up static resources in the ${webappRoot}/resources directory -->
	<resources mapping="/resources/**" location="/resources/" />
	<resources mapping="/uploadStorage/**" location="file:///C:/uploadStorage/" /> <!-- 스프링 관련 설정은 슬래쉬나 역슬래쉬 모두 허용함. 반면 web.xml에서는 정확한 경로를 사용해야 하므로 역슬래쉬 사용 -->
	<!-- <resources mapping="/매핑명/**" location="실제 파일을 업로드할 경로 지정" /> -->

	<!-- Resolves views selected for rendering by @Controllers to .jsp resources in the /WEB-INF/views directory 
	<beans:bean class="org.springframework.web.servlet.view.InternalResourceViewResolver">
		<beans:property name="prefix" value="/WEB-INF/views/" />
		<beans:property name="suffix" value=".jsp" />
	</beans:bean> -->

	
	<context:component-scan base-package="com.spring.**" /> <!-- 모든 파일 = *, 모든 폴더 = ** -->
	
	<!-- 타일즈(tiles) 설정. 타일즈를 통해서만 ViewResolver 처리 
	<beans:bean id="tilesViewResolver" 
	class="org.springframework.web.servlet.view.tiles3.TilesViewResolver" />
	
	<beans:bean id="tilesConfigurer"
	class="org.springframework.web.servlet.view.tiles3.TilesConfigurer">
		<beans:property name="definitions">
			<beans:list>
				<beans:value>/WEB-INF/tiles/tiles-setting.xml</beans:value>
			</beans:list>
		</beans:property>
	</beans:bean> -->
	
	<!-- 타일즈(tiles) 설정. ViewResolver는 우선순위 타일즈를 실행, 설정파일이 존재하지 않으면 2순위 실행 -->
	<beans:bean id="tilesConfigurer" class="org.springframework.web.servlet.view.tiles3.TilesConfigurer">
		<beans:property name="definitions">
			<beans:list>
				<beans:value>/WEB-INF/tiles/tiles-setting.xml</beans:value>
			</beans:list>
		</beans:property>
	</beans:bean>
	
	<beans:bean id="tilesViewResolver" class="org.springframework.web.servlet.view.UrlBasedViewResolver">
		<beans:property name="viewClass" value="org.springframework.web.servlet.view.tiles3.TilesView" />
		<beans:property name="order" value="1" /> <!-- 우선순위 -->
	</beans:bean>
	
	<beans:bean id="viewResolver" class="org.springframework.web.servlet.view.InternalResourceViewResolver">
		<beans:property name="prefix" value="/WEB-INF/views/" />
		<beans:property name="suffix" value=".jsp" />
		<beans:property name="order" value="2" /> <!-- 2순위 -->
	</beans:bean>
	
	<!-- 파일 첨부를 파일을 위한 -->
	<beans:bean id="multipartResolver" class="org.springframework.web.multipart.support.StandardServletMultipartResolver">
	</beans:bean>
	
	<!-- 자동으로 AspectJ 라이브러리를 이용해서 Proxy 객체를 생성해 내는 용도로 사용 -->
	<aop:aspectj-autoproxy />	
	
	<!-- Interceptors -->
	<mvc:interceptors>
		<mvc:interceptor>
			<mvc:mapping path="/cart/**" />
			<mvc:mapping path="/member/mypage" />
			<mvc:mapping path="/order/**" />
			<mvc:mapping path="/sCloset/**" />
			<beans:bean id="authLoginInterceptor" class="com.spring.common.AuthLoginInterceptor" />
		</mvc:interceptor>
	</mvc:interceptors>
</beans:beans>
